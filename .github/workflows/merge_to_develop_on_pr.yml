name: PR to [develop]
on: 
  pull_request:
    branches: [ develop ]

#1. load mise
#2. cache tuist
#3. install tuist
#4. checkout tuist project repository
#5. fetch XCConfig from repository
#6. test tuist project

jobs:
  test:
    runs-on: macos-latest
    env: 
      TUIST_VERSION: 4.12.1
    steps:

      #1. load mise
      - uses: jdx/mise-action@v2

      #2. cache tuist
      - name: cache tuist
        id: cache-tuist
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/tuist
          key: ${{ runner.os }}-tuist@${{ env.TUIST_VERSION }}
    
      #3. install tuist
      - name: install tuist
        if: steps.cache-tuist.outputs.cache-hit != 'true'
        run: |
          mise install tuist@${{ env.TUIST_VERSION }}
          mise use -g tuist@${{ env.TUIST_VERSION }}

      # - name: cache tree
      #   id: cache-tree
      #   uses: actions/cache@v4
      #   with:
      #     path: /opt/homebrew/bin/tree
      #     key: ${{ runner.os }}-tree
          
      - name: install tree
        # if: steps.cache-tree.outputs.cache-hit != 'true'
        run: brew install tree

      - name: check paths
        run: |
          which tuist
          which tree
        
      
      #4. checkout tuist project repository
      - name: checkout project
        uses: actions/checkout@v4
      
      #5. fetch XCConfig from repository
      - name: fetch xcconfig
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.XCCONFIG_REPO }}
          token: ${{ secrets.XCCONFIG_REPO_TOKEN }}
          path: '${{ github.workspace }}/project/XcodeConfiguration'
      
      - run: |
          echo "Checking configurations are loaded..."
          tree ${{ github.workspace }}/project/XcodeConfiguration
      
      #6. test tuist project
      - name: Test project
        run: |
          cd project
          tuist test

  


